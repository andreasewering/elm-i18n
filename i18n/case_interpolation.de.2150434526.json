["Versuche dieses Feature selten zu nutzen. Gegen einen eigenen Union Type in Elm zu matchen ist oft viel sauberer.\nIn dem aktuellen Beispiel hätten wir auch einen Datentyp {H0code|type Fruit = Apple \\| Banana \\| Other String|} erstellen können\nmit drei seperaten Übersetzungen.","Tipp","Fluent: Case Interpolation","Auch bekannt als Selektoren im Fluent Handbook, haben wir diesen Namen gewählt, da es Elm's\n{H0code|case .. of|} Statement imitiert (und auch dazu kompiliert wird). ","Alles was du tun musst ist ein normales Interpolations-Statement zu nehmen, einen Zeilen Umbruch nach dem\nVariablennamen hinzufügen und die darauf folgenden Zeilen um mindestens ein Leerzeichen einzurücken.\nDann kannst du pro Zeile ein Match Statement: Der String auf den gematcht werden soll kommt in eckige Klammern\nund alles danach ist der assoziierte Wert.\nStelle sicher dass du genau einen Fall als Default markierst, indem du die Zeile mit einem Stern {H0code|*|} anfängst.","Syntax"]