["Fluent: Formatting numbers","Zahlen in verschiedenen Arten zu formatieren ist eine Menge Arbeit.\nZum Glück deckt die {H0a|Intl API|href|https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat} dies ab. \nUnglücklicherweise bietet Elm keinen einfachen Zugriff auf diese API.\nDie traditionellen Interop Wege wie Flags, Ports und Web Components funktionieren für diesen Usecase leider alle nicht besonders gut.\nStattdessen verwenden wir die Interaktion zwischen JSON Decoders und ES6 Proxies um synchronen Zugiff zu erlauben.\nDamit dies funktioniert, wirst du {H0a|intl-proxy|href|https://www.npmjs.com/package/intl-proxy} per npm installieren und in deine Elm Applikation\nals Flag geben müssen. Der generierte Code wird dich dazu zwingen den Proxy zu übergeben\nwenn du die initiale {H1code|I18n|} Instanz erstellst, danach solltest du den Proxy nie wieder explizit in\ndeiner Applikation brauchen.","Elm und die Intl APIs","Die NumberFormat.format Methode kann eine Menge verschiedener Optionen erhalten, die {H0a|hier|href|https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat}\ndokumentiert sind. Um sie zu verwenden, Um sie zu benutzen, kannst du sie als kommaseparierte Argumente in\nden NUMBER Funktionsaufruf geben. Der Aufruf {H1code|NUMBER($num, style: \"percent\")|} wird z.B. das Argument an die Intl API\nweiterleiten, welche dann (in Deutsch) im Wesentlichen deine Zahl mit 100 multipliziert und ein '%' Zeichen ergänzt.\n","Zusätzliche Optionen","Wusstest du schon dass verschiedene Sprachen Zahlen unterschiedlich formatieren?\nHier ist die Zahl \"Ein-Tausend-Zwei-Hundert-Komma-Fünf\" in Deutsch {H0code|1.200,5|}\nund in Englisch {H0code|1,200.5|}. Das falsche Format auf deiner Website anzuzeigen könnte deine Nutzer verwirren."]